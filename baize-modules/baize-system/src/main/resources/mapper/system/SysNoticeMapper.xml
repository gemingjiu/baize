<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baize.system.mapper.SysNoticeMapper">
    
    <resultMap type="com.baize.system.domain.SysNotice" id="SysNoticeResult">
        <result property="id"       column="id"       />
        <result property="noticeTitle"    column="notice_title"    />
        <result property="noticeType"     column="notice_type"     />
        <result property="noticeContent"  column="notice_content"  />
        <result property="status"         column="status"          />
        <result property="createdBy"       column="created_by"       />
        <result property="createdTime"     column="created_time"     />
        <result property="modifiedBy"       column="modified_by"       />
        <result property="modifiedTime"     column="modified_time"     />
        <result property="remark"         column="remark"          />
    </resultMap>
    
    <sql id="selectNoticeVo">
        select id, notice_title, notice_type, cast(notice_content as char) as notice_content, status, created_by, created_time, modified_by, modified_time, remark
		from sys_notice
    </sql>
    
    <select id="selectNoticeById" parameterType="String" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        where id = #{id}
    </select>
    
    <select id="selectNoticeList" parameterType="com.baize.system.domain.SysNotice" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        <where>
			<if test="noticeTitle != null and noticeTitle != ''">
				AND notice_title like concat('%', #{noticeTitle}, '%')
			</if>
			<if test="noticeType != null and noticeType != ''">
				AND notice_type = #{noticeType}
			</if>
			<if test="createdBy != null and createdBy != ''">
				AND created_by like concat('%', #{createdBy}, '%')
			</if>
		</where>
    </select>
    
    <insert id="insertNotice" parameterType="com.baize.system.domain.SysNotice">
        insert into sys_notice (
			<if test="noticeTitle != null and noticeTitle != '' ">notice_title, </if>
			<if test="noticeType != null and noticeType != '' ">notice_type, </if>
			<if test="noticeContent != null and noticeContent != '' ">notice_content, </if>
			<if test="status != null and status != '' ">status, </if>
			<if test="remark != null and remark != ''">remark,</if>
 			<if test="createdBy != null and createdBy != ''">created_by,</if>
 			created_time
 		)values(
			<if test="noticeTitle != null and noticeTitle != ''">#{noticeTitle}, </if>
			<if test="noticeType != null and noticeType != ''">#{noticeType}, </if>
			<if test="noticeContent != null and noticeContent != ''">#{noticeContent}, </if>
			<if test="status != null and status != ''">#{status}, </if>
			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="createdBy != null and createdBy != ''">#{createdBy},</if>
 			now()
		)
    </insert>
	 
    <update id="updateNotice" parameterType="com.baize.system.domain.SysNotice">
        update sys_notice 
        <set>
            <if test="noticeTitle != null and noticeTitle != ''">notice_title = #{noticeTitle}, </if>
            <if test="noticeType != null and noticeType != ''">notice_type = #{noticeType}, </if>
            <if test="noticeContent != null">notice_content = #{noticeContent}, </if>
            <if test="revision != null">revision = #{revision}+1,</if>
            <if test="status != null and status != ''">status = #{status}, </if>
            <if test="modifiedBy != null and modifiedBy != ''">modified_by = #{modifiedBy},</if>
 			modified_time = now()
        </set>
        where id = #{id}
    </update>
	
    <delete id="deleteNoticeById" parameterType="String">
        delete from sys_notice where id = #{id}
    </delete>
    
    <delete id="deleteNoticeByIds" parameterType="String">
        delete from sys_notice where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>