<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baize.system.mapper.SysRoleMapper">

	<resultMap type="com.baize.system.api.domain.SysRole" id="SysRoleResult">
		<id     property="id"             column="id"               />
		<result property="roleName"           column="role_name"             />
		<result property="roleKey"            column="role_key"              />
		<result property="dataScope"          column="data_scope"            />
		<result property="menuCheckStrictly"  column="menu_check_strictly"   />
		<result property="deptCheckStrictly"  column="dept_check_strictly"   />
		<result property="sort"               column="sort"             />
		<result property="status"             column="status"                />
		<result property="deleted"            column="deleted"              />
		<result property="createdBy"          column="created_by"             />
		<result property="createdTime"          column="created_time"           />
		<result property="modifiedBy"         column="modified_by"             />
		<result property="modifiedTime"        column="modified_time"           />
		<result property="remark"             column="remark"                />
	</resultMap>

	<sql id="selectRoleVo">
	    select distinct r.id, r.role_name, r.role_key, r.sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly,
            r.status, r.deleted, r.created_time, r.remark
        from sys_role r
	        left join sys_user_role ur on ur.role_id = r.id
	        left join sys_user u on u.id = ur.user_id
	        left join sys_dept d on u.dept_id = d.id
    </sql>

    <select id="selectRoleList" parameterType="com.baize.system.api.domain.SysRole" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		where r.deleted = '0'
		<if test="id != null and id != ''">
			AND r.id = #{id}
		</if>
		<if test="roleName != null and roleName != ''">
			AND r.role_name like concat('%', #{roleName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND r.status = #{status}
		</if>
		<if test="roleKey != null and roleKey != ''">
			AND r.role_key like concat('%', #{roleKey}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			and TO_CHAR(r.created_time,'YYYYMMDD') &gt;= #{params.beginTime}
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			and TO_CHAR(r.created_time,'YYYYMMDD') &lt;= #{params.endTime}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by r.sort
	</select>

	<select id="selectRolePermissionByUserId" parameterType="String" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		WHERE r.deleted = '0' and ur.user_id = #{userId}
	</select>

	<select id="selectRoleAll" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
	</select>

	<select id="selectRoleListByUserId" parameterType="String" resultType="String">
		select r.id
        from sys_role r
	        left join sys_user_role ur on ur.role_id= r.id
	        left join sys_user u on u.id = ur.user_id
	    where u.id = #{id}
	</select>

	<select id="selectRoleById" parameterType="String" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		where r.id = #{id}
	</select>

	<select id="selectRolesByUserName" parameterType="String" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		WHERE r.deleted = '0' and u.user_name = #{userName}
	</select>

	<select id="checkRoleNameUnique" parameterType="String" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		 where r.role_name=#{roleName} and r.deleted = '0' limit 1
	</select>

	<select id="checkRoleKeyUnique" parameterType="String" resultMap="SysRoleResult">
		<include refid="selectRoleVo"/>
		 where r.role_key=#{roleKey} and r.deleted = '0' limit 1
	</select>

 	<insert id="insertRole" parameterType="com.baize.system.api.domain.SysRole" useGeneratedKeys="true" keyProperty="id">
 		insert into sys_role(
 			<if test="id != null and id != ''">id,</if>
 			<if test="roleName != null and roleName != ''">role_name,</if>
 			<if test="roleKey != null and roleKey != ''">role_key,</if>
 			<if test="sort != null">sort,</if>
 			<if test="dataScope != null and dataScope != ''">data_scope,</if>
 			<if test="menuCheckStrictly != null">menu_check_strictly,</if>
 			<if test="deptCheckStrictly != null">dept_check_strictly,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			<if test="createdBy != null and createdBy != ''">created_by,</if>
 			created_time
 		)values(
 			<if test="id != null and id != ''">#{id},</if>
 			<if test="roleName != null and roleName != ''">#{roleName},</if>
 			<if test="roleKey != null and roleKey != ''">#{roleKey},</if>
 			<if test="sort != null">#{sort},</if>
 			<if test="dataScope != null and dataScope != ''">#{dataScope},</if>
 			<if test="menuCheckStrictly != null">#{menuCheckStrictly},</if>
 			<if test="deptCheckStrictly != null">#{deptCheckStrictly},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="createdBy != null and createdBy != ''">#{createdBy},</if>
 			now()
 		)
	</insert>

	<update id="updateRole" parameterType="com.baize.system.api.domain.SysRole">
 		update sys_role
 		<set>
 			<if test="roleName != null and roleName != ''">role_name = #{roleName},</if>
 			<if test="roleKey != null and roleKey != ''">role_key = #{roleKey},</if>
 			<if test="sort != null">sort = #{sort},</if>
 			<if test="dataScope != null and dataScope != ''">data_scope = #{dataScope},</if>
 			<if test="menuCheckStrictly != null">menu_check_strictly = #{menuCheckStrictly},</if>
 			<if test="deptCheckStrictly != null">dept_check_strictly = #{deptCheckStrictly},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="remark != null">remark = #{remark},</if>
 			<if test="modifiedBy != null and modifiedBy != ''">modified_by = #{modifiedBy},</if>
 			modified_time = now()
 		</set>
 		where id = #{id}
	</update>

	<delete id="deleteRoleById" parameterType="String">
 		update sys_role set deleted = '2' where id = #{id}
 	</delete>

 	<delete id="deleteRoleByIds" parameterType="String">
 	    update sys_role set deleted = '2' where id in
 		<foreach collection="array" item="id" open="(" separator="," close=")">
 			#{id}
        </foreach>
 	</delete>

</mapper> 